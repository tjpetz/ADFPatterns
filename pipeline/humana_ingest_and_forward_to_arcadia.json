{
	"name": "humana_ingest_and_forward_to_arcadia",
	"properties": {
		"description": "Ingest a CSV (or other text file) from an SFTP site into a data lake.",
		"activities": [
			{
				"name": "Get List of Files in the Source",
				"description": "Get a list of all the ZIP files currently on the SFTP site.",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_humana_sftp_source",
						"type": "DatasetReference",
						"parameters": {
							"filename": "*.ZIP",
							"filesystem": "sftp",
							"folder": {
								"value": "@pipeline().parameters.payer",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "Copy SFTP to Source to Bronze",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get List of Files in the Source",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get List of Files in the Source').output.childItems",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy SFTP to Source Raw",
							"description": "Copy the file from the SFTP source to the raw layer of the lake.  The file remains in exactly its original format (e.g. ZIP remains a ZIP).",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": false
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "ds_humana_sftp_source",
									"type": "DatasetReference",
									"parameters": {
										"filename": {
											"value": "@item().name",
											"type": "Expression"
										},
										"filesystem": "sftp",
										"folder": {
											"value": "@pipeline().parameters.payer",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_lake_binary_nocompression",
									"type": "DatasetReference",
									"parameters": {
										"filename": {
											"value": "@item().name",
											"type": "Expression"
										},
										"layer": "source",
										"payer": {
											"value": "@pipeline().parameters.payer",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Decompress File to Source Processed",
							"description": "File will be unzipped and organized by arrival time.",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Copy SFTP to Source Raw",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [
								{
									"name": "Source",
									"value": "raw/@{concat('humana','/','/')}/@{item().name}"
								},
								{
									"name": "Destination",
									"value": "raw/@{concat('humana','/','unzipped')}/@{item().name}"
								},
								{
									"name": "FileEnding",
									"value": "@split(item().name, '_')[2]"
								}
							],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": false,
										"deleteFilesAfterCompletion": false
									},
									"formatSettings": {
										"type": "BinaryReadSettings",
										"compressionProperties": {
											"type": "ZipDeflateReadSettings",
											"preserveZipFileNameAsFolder": false
										}
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "ds_datalake_binary_zipped",
									"type": "DatasetReference",
									"parameters": {
										"layer": "source",
										"payer": "humana",
										"filename": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_datalake_binary_unzipped",
									"type": "DatasetReference",
									"parameters": {
										"layer": "bronze",
										"payer": {
											"value": "@pipeline().parameters.payer",
											"type": "Expression"
										},
										"importTimestamp": {
											"value": "@formatDateTime(pipeline().TriggerTime, 'yyyy/MM/dd/HH')",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Get List of Ingested Files",
				"description": "Get the list of files we ingested to the Bronze layer",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Copy SFTP to Source to Bronze",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_datalake_delimited",
						"type": "DatasetReference",
						"parameters": {
							"layer": "bronze",
							"payer": {
								"value": "@concat(pipeline().parameters.payer, '/', pipeline().parameters.importTimestamp)",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "Send Required File to Arcadia",
				"description": "Iterated over the ingested files and send only the required files to Arcadia.",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get List of Ingested Files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get List of Ingested Files').output.childItems",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "If Send File to Arcadia",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@contains(item().name, 'REMBX.TXT')",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Dont Send to Arcadia",
										"type": "Wait",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"waitTimeInSeconds": 1
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "Send to Arcadia",
										"type": "Wait",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"waitTimeInSeconds": 1
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Signal Humana Files in Bronze Layer",
				"description": "Post and event to the Event Grid that Humana files are available in Bronze",
				"type": "AzureFunctionActivity",
				"dependsOn": [
					{
						"activity": "Copy SFTP to Source to Bronze",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": []
			},
			{
				"name": "Signal Humana Files Sent to Arcadia",
				"type": "AzureFunctionActivity",
				"dependsOn": [
					{
						"activity": "Send Required File to Arcadia",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": []
			},
			{
				"name": "Signal Stage Failure",
				"type": "AzureFunctionActivity",
				"dependsOn": [
					{
						"activity": "Get List of Files in the Source",
						"dependencyConditions": [
							"Failed"
						]
					},
					{
						"activity": "Copy SFTP to Source to Bronze",
						"dependencyConditions": [
							"Failed"
						]
					},
					{
						"activity": "Get List of Ingested Files",
						"dependencyConditions": [
							"Failed"
						]
					},
					{
						"activity": "Send Required File to Arcadia",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": []
			}
		],
		"parameters": {
			"payer": {
				"type": "string",
				"defaultValue": "humana"
			},
			"importTimestamp": {
				"type": "string",
				"defaultValue": "debug"
			}
		},
		"folder": {
			"name": "Payer/humana"
		},
		"annotations": []
	}
}